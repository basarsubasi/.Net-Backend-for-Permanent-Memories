// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231224070122_Miration1")]
    partial class Miration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Item", b =>
                {
                    b.Property<Guid>("GUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalImages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TitleImage")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("GUID");

                    b.ToTable("Items");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("WebApplication1.Models.Film", b =>
                {
                    b.HasBaseType("WebApplication1.Models.Item");

                    b.Property<int>("FilmBrand")
                        .HasColumnType("int");

                    b.Property<int>("FilmColorState")
                        .HasColumnType("int");

                    b.Property<int>("FilmExposure")
                        .HasColumnType("int");

                    b.Property<int>("FilmISO")
                        .HasColumnType("int");

                    b.Property<int>("FilmSize")
                        .HasColumnType("int");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            GUID = new Guid("ae222776-0367-4598-90a5-73ce0a07be03"),
                            AdditionalImages = "[]",
                            Description = "Kodak Portra 400 is a color negative film great for portraits, fashion and commercial shoots. This film is known for its beautiful skin tones and natural colors.",
                            IsAvailable = true,
                            Price = 10.99m,
                            Quantity = 400,
                            Title = "Kodak Portra 400",
                            FilmBrand = 0,
                            FilmColorState = 0,
                            FilmExposure = 36,
                            FilmISO = 400,
                            FilmSize = 35
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Film", b =>
                {
                    b.HasOne("WebApplication1.Models.Item", null)
                        .WithOne()
                        .HasForeignKey("WebApplication1.Models.Film", "GUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
